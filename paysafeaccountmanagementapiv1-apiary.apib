FORMAT: 1A
HOST: https://api.test.paysafe.com/accountmanagement/v1/

# Paysafe Account Management API

# Overview

Connect your application

# Authentication 

In order for you to use the Paysafe REST API, Paysafe must first set you up on their system
and provide you with an API key. Your API key looks something like this:
 * Key ID – MerchantXYZ
 * Key Password – B-tst1-0-51ed39e4-312d02345d3f123120881dff9bb4020a89e8ac44cdfdcecd702151182fdc952272661d290ab2e5849e31bb03deede7e

The case-sensitive API key is sent using HTTP Basic Authentication. To use HTTP Basic Authentication, you must send the API key credentials using the Authorization header with every request. The Authorization header is constructed as follows:
 1. The Key ID and Key Password are combined into a string separated by a colon, e.g.,“Key ID:Key Password”.
 2. The resulting string literal is then encoded using Base64.
 3. The authorization method and a space (i.e., “Basic”) are then put before the encoded string.

For example, using the Key ID and Password examples above, the header is formed as follows:

``Authorization: Basic
TWVyY2hhbnRYWVo6Qi10c3QxLTAtNTFlZDM5ZTQtMzEyZDAyMzQ1ZDNmMTIzMTIwODgxZGZmOWJiNDAyMGE4OWU4YWM0NGNkZmRjZWNkNzAyMTUxMTgyZmRjOTU yMjcyNjYxZDI5MGFiMmU1ODQ5ZTMxYmIwM2RlZWRlN2U=``

For additional details, please refer to [http://en.wikipedia.org/wiki/Basic_access_authentication](http://en.wikipedia.org/wiki/Basic_access_authentication).

**Note:** Your Production API key will be different from your Test API key. Contact your account manager for details. You must keep your API keys safe and ensure that it is used appropriately for your needs.

# URLs 

##  Test URL
In order to test your integration with Paysafe, use the following Test URL:

`https://api.test.paysafe.com`

For example:

`https://api.test.paysafe.com/accountmanagement/v1/merchants/{MERCHANT_ID}`

## Production URL
In order to process live requests with Paysafe, use the following Production URL:

`https://api.paysafe.com`

For example:

`https://api.paysafe.com/accountmanagement/v1/merchants/{MERCHANT_ID}`

# Pagination

In the case where an API GET request returns multiple results, Paysafe returns the first 10 records by default and uses HATEOAS links to provide page navigation. In addition to the default behavior, it is also possible to control the number of results and starting point by passing in query parameters as follows:

## Query Parameters for Pagination


| Name      | Description                                                                           |
|-----------|---------------------------------------------------------------------------------------|
| limit     | This is the total number of records to  return. Default value is 10. Max value is 50. |
| offset    | This is the starting position, where 0 is the first record. Default value is 0.       |
| startDate | This is the start date in UTC. Default value is 30 days before the endDate.           |
| endDate   | This is the end date in UTC. Default value is the current date and time.              |

# Global Invalid Characters

You must not include any of the characters in the following table as values in any of your request parameters. If you do, your request will result in an error.

|    Character    |    HEX    |    Description                     |
|-----------------|-----------|------------------------------------|
| "               | 22        | Double quotes (or speech marks)    |
| ;               | 3B        | Semicolon                          |
| ^               | 5E        | Caret, circumflex                  |
| *               | 2A        | Asterisk                           |
| <               | 3C        | Less than (or open angled bracket) |
| /               | 2F        | Slash or divide                    |
| [               | 5B        | Opening bracket                    |
| ]               | 5D        | Closing bracket                    |
| \               | 5C        | Backslash                          |


# API 

The Account Management API allows partners to board merchants using the REST protocol. The protocol uses JSON for all requests and responses.

The following request types are supported:

  * [Merchants](#merchants)
  * [Merchant Accounts](#merchantaccounts)
  * [Users](#users)
  * [Merchant Account Addresses](#merchantaccountaddresses)
  * [Business Owners](#businessowners)
  * [Business Owner Current Addresses](#currentaddresses)
  * [Business Owner Previous Addresses](#previousaddresses)
  * [Business Owner Canadian Driving Licenses](#canadiandrivinglicenses)
  * [Business Owner UK Driving Licenses](#ukdrivinglicenses)
  * [Business Owner European Identity Cards](#identitycards)
  * [Business Owner International Passports](#internationalpassports)
  * [Merchant EFT Bank Accounts](#eftbankaccounts)
  * [Merchant ACH Bank Accounts](#achbankaccounts)
  * [Merchant BACS Bank Accounts](#bacsbankaccounts)
  * [Merchant SEPA Bank Accounts](#sepabankaccounts)
  * [Merchant Wire Bank Accounts](#wirebankaccounts)
  * [Terms and Conditions](#termsandconditions)
  * [Merchant Account Activation](#accountactivation)
  * [Bank Account Validation](#microdeposits)
  
**API Endpoint**

`https://api.paysafe.com/accountmanagement/v1/`  

**Resource Patterns**

|Endpoint URL                                   |Description                            |Action |
|---                                            |---                                    |---    |
|/merchants                                     |Create a Merchant                      |POST   |
|/merchants/{MERCHANT_ID}                       |Update a Merchant                      |PUT    |
|/merchants/{MERCHANT_ID}                       |Look Up a Merchant                     |GET    |
|/merchants/{MERCHANT_ID}/accounts              |Create a Merchant Account              |POST   |
|/accounts/{ACCOUNT_ID}                         |Update a Merchant Account              |PATCH  |
|/accounts/{ACCOUNT_ID}                         |Update a Merchant Account              |PUT    |
|/accounts/{ACCOUNT_ID}                         |Look Up a Merchant Account             |GET    |
|/accounts/{ACCOUNT_ID}/users                   |Create a User                          |POST   |
|/accounts/{ACCOUNT_ID}/users                   |Look Up a User                         |GET    |
|/accounts/{ACCOUNT_ID}/addresses               |Create an Account Address              |POST   |
|/addresses/{ADDRESS_ID}                        |Update an Account Address              |PUT    |
|/addresses/{ADDRESS_ID}                        |Look Up an Account Address             |GET    |
|/accounts/{ACCOUNT_ID}/businessowners          |Create a Business Owner                |POST   |
|/businessowners/{BUSINESS_OWNER_ID}            |Update a Business Owner                |PATCH  |
|/businessowners/{BUSINESS_OWNER_ID}            |Update a Business Owner                |PUT    |
|/businessowners/{BUSINESS_OWNER_ID}            |Look Up a Business Owner               |GET    |
|/businessowners/{BUSINESS_OWNER_ID}/currentaddresses   |Create a Business Owner Current Address    |POST   |
|/currentaddresses/{CURRENT_ADDRESS_ID}         |Update a Business Owner Current Address    |PATCH  |
|/currentaddresses/{CURRENT_ADDRESS_ID}         |Update a Business Owner Current Address    |PUT    |
|/currentaddresses/{CURRENT_ADDRESS_ID}         |Look Up a Business Owner Current Address |GET    |
|/businessowners/{BUSINESS_OWNER_ID}/previousaddresses  |Create a Business Owner Previous Address   |POST   |
|/previousaddresses/{PREVIOUS_ADDRESS_ID}       |Update a Business Owner Previous Address |PATCH  |
|/previousaddresses/{PREVIOUS_ADDRESS_ID}       |Update a Business Owner Previous Address |PUT  |
|/previousaddresses/{PREVIOUS_ADDRESS_ID}       |Look Up a Business Owner Previous Address    |GET    |
|/businessowners/{BUSINESS_OWNER_ID}/canadiandrivinglicenses    |Create a Canadian Business Owner Driving License   |POST   |
|/canadiandrivinglicenses/{DOCUMENT_ID}         |Update a Canadian Business Owner Driving License   |PUT    |
|/canadiandrivinglicenses/{DOCUMENT_ID}         |Look Up a Canadian Business Owner Driving License    |GET    |
|/canadiandrivinglicenses/{DOCUMENT_ID}         |Delete a Canadian Business Owner Driving License |DELETE |
|/businessowners/{BUSINESS_OWNER_ID}/ukdrivinglicenses  |Create a UK Business Owner Driving License |POST   |
|/ukdrivinglicenses/{DOCUMENT_ID}               |Update a UK Business Owner Driving License |PUT    |
|/ukdrivinglicenses/{DOCUMENT_ID}               |Look Up a UK Business Owner Driving License    |GET    |
|/ukdrivinglicenses/{DOCUMENT_ID}               |Delete a UK Business Owner Driving License   |DELETE |
|/businessowners/{BUSINESS_OWNER_ID}/europeanidentitycards  |Create a European Business Owner Identity Card |POST   |
|/europeanidentitycards/{DOCUMENT_ID}           |Update a European Business Owner Identity Card |PUT    |
|/europeanidentitycards/{DOCUMENT_ID}           |Look Up a European Business Owner Identity Card    |GET    |
|/europeanidentitycards/{DOCUMENT_ID}           |Delete the European Business Owner Identity Card   |DELETE |
|/businessowners/{BUSINESS_OWNER_ID}/internationalpassports  |Create a Business Owner International Passport |POST   |
|/internationalpassports/{DOCUMENT_ID}          |Update a Business Owner International Passport |PUT    |
|/internationalpassports/{DOCUMENT_ID}          |Look Up the Business Owner International Passport  |GET    |
|/internationalpassports/{DOCUMENT_ID}          |Delete a Business Owner International Passport |DELETE |
|/accounts/{ACCOUNT_ID}/eftbankaccounts         |Create an EFT Merchant Bank Account    |POST   |
|/accounts/{ACCOUNT_ID}/eftbankaccounts/{BANK_ACCOUNT_ID}   |Update an EFT Merchant Bank Account    |PUT    |
|/accounts/{ACCOUNT_ID}/eftbankaccounts/{BANK_ACCOUNT_ID}   |Look Up an EFT Merchant Bank Account   |GET    |
|/accounts/{ACCOUNT_ID}/eftbankaccounts/{BANK_ACCOUNT_ID}   |Delete an EFT Merchant Bank Account    |DELETE |
|/accounts/{ACCOUNT_ID}/achbankaccounts         |Create an ACH Merchant Bank Account    |POST   |
|/accounts/{ACCOUNT_ID}/achbankaccounts/{BANK_ACCOUNT_ID}   |Update an ACH Merchant Bank Account    |PUT    |
|/accounts/{ACCOUNT_ID}/achbankaccounts/{BANK_ACCOUNT_ID}   |Look Up an ACH Merchant Bank Account   |GET    |
|/accounts/{ACCOUNT_ID}/achbankaccounts/{BANK_ACCOUNT_ID}   |Delete an ACH Merchant Bank Account    |DELETE |
|/accounts/{ACCOUNT_ID}/bacsbankaccounts         |Create a BACS Merchant Bank Account    |POST   |
|/accounts/{ACCOUNT_ID}/bacsbankaccounts/{BANK_ACCOUNT_ID}   |Update a BACS Merchant Bank Account    |PUT    |
|/accounts/{ACCOUNT_ID}/bacsbankaccounts/{BANK_ACCOUNT_ID}   |Look Up a BACS Merchant Bank Account   |GET    |
|/accounts/{ACCOUNT_ID}/bacsbankaccounts/{BANK_ACCOUNT_ID}   |Delete a BACS Merchant Bank Account    |DELETE |
|/accounts/{ACCOUNT_ID}/sepabankaccounts         |Create a SEPA Merchant Bank Account    |POST   |
|/accounts/{ACCOUNT_ID}/sepabankaccounts/{BANK_ACCOUNT_ID}   |Update a SEPA Merchant Bank Account    |PUT    |
|/accounts/{ACCOUNT_ID}/sepabankaccounts/{BANK_ACCOUNT_ID}   |Look Up a SEPA Merchant Bank Account   |GET    |
|/accounts/{ACCOUNT_ID}/sepabankaccounts/{BANK_ACCOUNT_ID}   |Delete a SEPA Merchant Bank Account    |DELETE |
|/accounts/{ACCOUNT_ID}/wirebankaccounts         |Create a Wire Merchant Bank Account    |POST   |
|/accounts/{ACCOUNT_ID}/wirebankaccounts/{BANK_ACCOUNT_ID}   |Update a Wire Merchant Bank Account    |PUT    |
|/accounts/{ACCOUNT_ID}/wirebankaccounts/{BANK_ACCOUNT_ID}   |Look Up a Wire Merchant Bank Account   |GET    |
|/accounts/{ACCOUNT_ID}/wirebankaccounts/{BANK_ACCOUNT_ID}   |Delete a Wire Merchant Bank Account    |DELETE |
|/accounts/{ACCOUNT_ID}/termsandconditions      |Accept the Terms and Conditions        |POST   |
|/accounts/{ACCOUNT_ID}/activation              |Activate a Merchant Account            |POST   |
|/achbankaccounts/{BANK_ACCOUNT_ID}/microdeposits |Validate an ACH Bank Account         |POST   |
|/eftbankaccounts/{BANK_ACCOUNT_ID}/microdeposits |Validate an EFT Bank Account         |POST   |
|/bacsbankaccounts/{BANK_ACCOUNT_ID}/microdeposits |Validate a BACS Bank Account        |POST   |
|/sepabankaccounts/{BANK_ACCOUNT_ID}/microdeposits |Validate a SEPA Bank Account        |POST   |
|/wirebankaccounts/{BANK_ACCOUNT_ID}/microdeposits |Validate a Wire Bank Account        |POST   |
|/microdeposits/{MICRO_DEPOSIT_ID}      |Look Up a Microdeposit |GET    |
|/microdeposits/{MICRO_DEPOSIT_ID}/validate |Validate a Bank Microdeposit   |POST   |



# Getting Started

This section outlines some common scenarios for creating and managing Merchant Accounts. To get started you must first sign up for a test account and get an API key.

All examples in this section use cURL, which is a command line tool for transferring data using protocols such as HTTPS.

## Verify That the Service Is Accessible

The following request verifies that the service is up and accessible from your network.

Request:

`curl -X GET https://api.test.netbanx.com/accountmanagement/monitor`

Response:

`{
"status" : "READY"
}`

**Note:** The system should respond with a status of READY if it is available.

## Create a New Merchant

To create a merchant, you must initiate a POST request to the *merchants* endpoint. The merchant will be listed against your partner account with Paysafe.

                curl -X POST https://api.test.netbanx.com/accountmanagement/v1/merchants
                  -u devcentre322:B-qa2-0-53625f86-302c021476f52bdc9deab7aea876bb28762e62f92fc6712d0214736abf501e9675e55940e83ef77f5c304edc7968 \
                  -H 'Content-Type: application/json' \
                  -d ' {
                      "name" : "Popeye's Gym"
                    }

**Response**

            {
            "links":[
            {
              "rel":"self",
              "href":"https://api.test.netbanx.com/accountmanagement/v1/merchants/a5f1889d-f1be-4bbf-941d-fd9b8d09d5b1"
            }
            ],
              "id" : "a5f1889d-f1be-4bbf-941d-fd9b8d09d5b1",
              "name" : "Popeyes Gym"
            }
            

## Create a New Merchant Account

To create an account for a merchant, you must initiate a POST request to the *accounts* endpoint.

            curl -X POST https://api.test.netbanx.com/accountmanagement/v1/merchants/a5f1889d-f1be-4bbf-941d-fd9b8d09d5b1/accounts
              -u devcentre322:B-qa2-0-53625f86-302c021476f52bdc9deab7aea876bb28762e62f92fc6712d0214736abf501e9675e55940e83ef77f5c304edc7968 \
              -H 'Content-Type: application/json' \
              -d ' {
                    "name": "Popeye's Gym",
                    "currency": "CAD",
                    "region": "CA",
                    "legalEntity": "Popeye's Inc",
                    "productCode" : "GOLD"  
            }
            
**Response**

            {
              "id":"89987201",
              "status":"PENDING",
              "name": "Popeye's Gym",
              "currency": "CAD",
              "region": "CA",
              "legalEntity": "Popeye's Inc",
              "productCode" : "GOLD",
              "creationDate" : "2015-01-20T12:12:56Z",
              "links":[
                {
                  "rel":"self",
                  "href":"https://api.test.netbanx.com/accountmanagement/v1/merchants/a5f1889d-f1be-4bbf-941d-fd9b8d09d5b1/accounts/89987201"
                }
              ]
            }


### Add an Address to the Account

Once the merchant account has been created, you must initiate a POST request to the *addresses* endpoint to add an address to it. 

            curl -X POST https://api.test.netbanx.com/accountmanagement/v1/accounts/89987201//addresses\
              -u devcentre322:B-qa2-0-53625f86-302c021476f52bdc9deab7aea876bb28762e62f92fc6712d0214736abf501e9675e55940e83ef77f5c304edc7968 \
              -H 'Content-Type: application/json' \
              -d ' {
                "street":"100 Queen Street West",   
                "city":"Toronto",
                "state":"ON",
                "country":"CA",
                "zip":"M5H 2N2"
             } '
             
**Response**

            {
              "links":[
                {
                  "rel":"self",
                  "href":"https://api.test.netbanx.com/accountmanagement/v1/accounts/89987201/addresses/6a275b7c-6f11-4ed1-ae77-21071724574g"
                }
              ],
              "id":"6a275b7c-6f11-4ed1-ae77-21071724574g",
              "street":"100 Queen Street West",   
              "city":"Toronto",
              "state":"ON",
              "country":"CA",
              "zip":"M5H 2N2"
            }


### Update Existing Account Details

To update account details, you must initiate a PATCH request to the *accounts* endpoint.

            curl -X PATCH https://api.test.netbanx.com/accountmanagement/v1/accounts/89987201
              -u devcentre322:B-qa2-0-53625f86-302c021476f52bdc9deab7aea876bb28762e62f92fc6712d0214736abf501e9675e55940e83ef77f5c304edc7968 \
              -H 'Content-Type: application/json' \
              -d ' {
                     "legalentity" : "Popeyes Inc",
                     "url: "www.popeyessupplements.com",
                     "type" : "Corporation",
                     "description":"Performance enhancing nutritional supplements",
                     "isCardPresent" : false,
                     "hasPreviouslyProcessedCards" : false,
                     "shipsGoods" : false,
                     "federalTaxNumber" : 1231,
                     "averageTransactionAmount" : "100000.00",
                     "phoneNumber" : "8191112222",
                     
                     "merchantDescriptor" : {
                       "dynamicDescriptor" : "Popeyes",
                       "phone" : "1112223333"
                     }
             } '
             
**Response**

            {
             "links":[
                {
                  "rel":"self",
                  "href":"https://api.test.netbanx.com/accountmanagement/v1/accounts/89987201"
                },
              ]
            "legalentity" : "Popeye's Gym",     
             "name" : "Popeye's Gym",
                    "owner" : "Popeye's Gym",
                      
                     "url: "www.popeyessupplements.com",
                     "type" : "Corporation",
                     "description":"Performance enhancing nutritional supplements",
                     "isCardPresent" : false,
                     "hasPreviouslyProcessedCards" : false,
                     "shipsGoods" : false,
                     "federalTaxNumber" : 1231,
                     "averageTransactionAmount" : "100000.00",
                     "phoneNumber" : "8191112222"
                     "currency" : "CAD",
             
                     "country":"CA",
                     "merchantDescriptor" : {
                       "dynamicDescriptor" : "Popeye's",
                       "phone" : "1112223333"
                     }
            }


## Create a New User

Once an account has been created, you can add a user to it. The user has access to the functionality of the Merchant Back Office, including transaction reports. 

To add a new user to the account, you must initiate a POST request to the *users* endpoint.

**Note:** You can add the same user to multiple merchant accounts. However, each merchant account can be assigned only one user.

            curl -X POST https://api.test.netbanx.com/accountmanagement/v1/accounts/89987201/users\
              -u devcentre322:B-qa2-0-53625f86-302c021476f52bdc9deab7aea876bb28762e62f92fc6712d0214736abf501e9675e55940e83ef77f5c304edc7968 \
              -H 'Content-Type: application/json' \
              -d ' {
                    "userName" : "luke_skywalker",
                    "password" : "Easypass",
                    "email" : "test.email@test.com",
                    "recoveryQuestion" : {
                    "questionId" : "1",
                    "answer" : "Han Solo"
                    }
            }
            
**Response**

            {
              "userName": "luke_skywalker",
              "password": "********",
              "email": "test.email@test.com",
              "recoveryQuestion": {
                "questionId": "1",
                "question": "What is the name of your oldest sibling?",
                "answer": "********"
              },
              "links": [
                {
                  "rel": "account",
                  "href": "https://api.test.netbanx.com/accountmanagement/v1/accounts/1001059570"
                }
              ]
            }
            
## Create a Business Owner

To create a business owner, you must initiate a POST to the *businessowners* endpoint.

            curl -X POST https://api.test.netbanx.com/accountmanagement/v1/accounts/89987201/businessowners \
              -u devcentre322:B-qa2-0-53625f86-302c021476f52bdc9deab7aea876bb28762e62f92fc6712d0214736abf501e9675e55940e83ef77f5c304edc7968 \
              -H 'Content-Type: application/json' \
              -d ' {
                    "firstName":"Joe",
                    "middleName":"Xavier",
                    "lastName":"Smith",
                    "jobTitle":"CEO",
                    "phone":"000000000",
                    "ssn":"123123456",
                    "email":"jxs@gmail.com",
                    "dateOfBirth":{
                        "day":19,
                        "month":8, 
                        "year":1976
                        },
                "locale":"en-US",
                "customerIp":"127.0.0.1"
                }
            }
            
**Response**

            {
              "id": "8ede583e-6326-4298-885b-988522f6c54e",
              "firstName": "Joe",
              "lastName": "Xavier",
              "middleName": "Smith",
              "email": "jzs@gmail.com",
              "jobTitle": "CEO",
              "phone": "000000000",
              "ssn": "*******56",
              "dateOfBirth": {
                "day": 19,
                "month": 8,
                "year": 1976
              },
              "links": [
                {
                  "rel": "self",
                  "href": "https://api.test.netbanx.com/accountmanagement/v1/businessowners/8ede583e-6326-4298-885b-988522f6c54e"
                }
              ]
            }

### Add an Address to the Business Owner

To add an address to the business owner, you must initiate a POST request to the *currentaddresses* endpoint.

            curl -X POST https://api.test.netbanx.com/accountmanagement/v1/businessowners/5e3680da-cfac-4917-855a-181c8fe27751/currentaddresses\
              -u devcentre322:B-qa2-0-53625f86-302c021476f52bdc9deab7aea876bb28762e62f92fc6712d0214736abf501e9675e55940e83ef77f5c304edc7968 \
              -H 'Content-Type: application/json' \
              -d ' {
                "street":"270 RUE OLIER",
                "street2":"",
                "city":"Chicoutmi",
                "zip":"G7G4J3",
                "country":"CA",
                "state":"QC",
                "yearsAtAddress" : "2"
              }
              
**Response**

            {
              "links":[
                {
                  "rel":"self",
                  "href":"https://api.test.netbanx.com/accountmanagement/v1/businessowners/5e3680da-cfac-4917-855a-181c8fe27751/currentaddresses/6a275b7c-6f11-4ed1-ae77-21071724574g"
                }
              ],
              "id":"6a275b7c-6f11-4ed1-ae77-21071724574g",
              "street":"270 RUE OLIER",
              "street2":"",
              "city":"Chicoutmi",
              "zip":"G7G4J3",
              "country":"CA",
              "state":"QC",
              "yearsAtAddress" : "2"
            }

### Add a Previous Address to the Business Owner

To add a previous address to the business owner, you must initiate a POST request to the *previousaddresses* endpoint.

See [Business Owner Previous Addresses](#previousaddresses) for details on when this entity would be required.

            curl -X POST https://api.test.netbanx.com/accountmanagement/v1/businessowners/5e3680da-cfac-4917-855a-181c8fe27751/previousaddresses\
              -u devcentre322:B-qa2-0-53625f86-302c021476f52bdc9deab7aea876bb28762e62f92fc6712d0214736abf501e9675e55940e83ef77f5c304edc7968 \
              -H 'Content-Type: application/json' \
              -d ' {
                "street":"270 RUE OLIER",
                "street2":"",
                "city":"Chicoutmi",
                "zip":"G7G4J3",
                "country":"CA",
                "state":"QC",
                "yearsAtAddress" : "2"
              }
              
**Response**

            {
              "links":[
                {
                  "rel":"self",
                  "href":"https://api.test.netbanx.com/accountmanagement/v1/businessowners/5e3680da-cfac-4917-855a-181c8fe27751/previousaddresses/6a275b7c-6f11-4ed1-ae77-21071724574g"
                }
              ],
              "id":"6a275b7c-6f11-4ed1-ae77-21071724574g",
              "street":"270 RUE OLIER",
              "street2":"",
              "city":"Chicoutmi",
              "zip":"G7G4J3",
              "country":"CA",
              "state":"QC",
              "yearsAtAddress" : "2"
            }

## Add a Merchant Bank Account

In order to be settled (i.e., receive your funds), each merchant account requires an associated bank account. Bank account details are different in each region and therefore different endpoints are used:

 * Canada – accounts/{ACCOUNT_ID}/eftbankaccounts
 * US – accounts/{ACCOUNT_ID}/achbankaccounts
 * UK – accounts/{ACCOUNT_ID}/bacsbankaccounts
 * EU – accounts/{ACCOUNT_ID}/sepabankaccounts (for countries that [support SEPA](#sepacountries))
 * EU – accounts/{ACCOUNT_ID}/wirebankaccounts
 
**Note:** The Account Management API does not currently support bank account validation. Paysafe recommends that the partner verify that the bank account information is correct as part of their on-boarding procedures.

To add a merchant bank account to a Canadian merchant account, as in the following example, you must initiate a POST request to the *eftbankaccounts* endpoint.

            curl -X POST https://api.test.netbanx.com/accountmanagement/v1/accounts/89987201/eftbankaccounts
              -u devcentre322:B-qa2-0-53625f86-302c021476f52bdc9deab7aea876bb28762e62f92fc6712d0214736abf501e9675e55940e83ef77f5c304edc7968 \
              -H 'Content-Type: application/json' \
              -d ' {
                "accountNumber" : "511201",
                "transitNumber" : "25039",
                "institutionId" : "001"
              }'
              
**Response**

            {
              "id": "de2d6f63-c6c5-42a3-8f97-54ea0a229318",
              "accountNumber":"511201",
              "transitNumber": "25039",
              "institutionId": "001",
              "links": [
                {
                  "rel": "self",
                  "href": "https://api.test.netbanx.com/accountmanagement/v1/eftbankaccounts/de2d6f63-c6c5-42a3-8f97-54ea0a229318"
                }
              ]
            }
            
## Accept the Terms and Conditions

On-boarding merchants must accept Paysafe's Terms and Conditions.  To accept the Terms and Conditions, you must inititate a POST request to the *termsandconditions* endpoint.

**Note:** To view the Terms and Conditions in HTML format, initiate a GET request to the *termsandconditions* endpoint.

            curl -X POST https://api.test.netbanx.com/accountmanagement/v1/accounts/89987201/termsandconditions\
              -u devcentre322:B-qa2-0-53625f86-302c021476f52bdc9deab7aea876bb28762e62f92fc6712d0214736abf501e9675e55940e83ef77f5c304edc7968
              -H 'Content-Type: application/json' \
              -d ' {
                "version" : "1.0"
              }
              
**Response**

            {
              "id" : "6a275b7c-6f11-4ed1-ae77-21071724574a",
              "version" : "1.0",
              "dateAccepted" : "2014-12-14T15:12:18Z"
            }

## Activate the New Merchant Account

After the merchant has been created, you must then activate the on-boarding request. If the account is in the correct state and contains enough information the merchant will be on-boarded and go through our risk and compliance screening.

To activate the new merchant account, you must initiate a POST to the *activation* endpoint. 

             curl -X POST https://api.test.netbanx.com/accountmanagement/v1/accounts/89987201/activation\
              -u devcentre322:B-qa2-0-53625f86-302c021476f52bdc9deab7aea876bb28762e62f92fc6712d0214736abf501e9675e55940e83ef77f5c304edc7968 \
              -H 'Content-Type: application/json'
              
**Note:** By default, the merchant account is activated with the status of DEFERRED. Once it has successfully gone through our risk and compliance screening, the status will be updated to PROCESSING.
Note that the response below has been truncated – the full response will contain all the information within the merchant profile.

            {
              "links":[
                {
                  "rel":"self",
                  "href":"https://api.test.netbanx.com/accountmanagement/v1/accounts/89987201"
                }
              ],
              "id":"89987201",
              "status":"DEFERRED",
              "reasonCode": "D2",
               "name" : "Popeyes Gym",        
              "currency" : "USD",
              "country":"US",
              "creationDate" : "2016-01-20T12:12:56Z"
              }


## Validate the Bank Account

When you activate the merchant account successfully, by default the account has the status of DEFERRED. In order to be able to process transaction requests through the merchant account, you must validate the bank account that was added to this merchant account. To do this validation, you must send a POST to the *microdeposits* endpoint. 

As a result of the microdeposit request, a small deposit (between .01 and .99 of the currency of that account) will be made to the bank account. 

**Create a Microdeposit**

             curl -X POST https://api.netbanx.com/accountmanagement/v1/eftbankaccounts/27e785b5-8cd7-42dd-9634-c41f8ccf267e/microdeposits\
              -u devcentre322:B-qa2-0-53625f86-302c021476f52bdc9deab7aea876bb28762e62f92fc6712d0214736abf501e9675e55940e83ef77f5c304edc7968 \
              -H 'Content-Type: application/json' \
              -d ' { }

**Response**

            {
               "id":"58273d46-5702-4a1e-b5c6-3d21b5413588",
               "status":"SENT",
               "links":[
                  {
                     "rel":"self",
                     "href":"https://api.netbanx.com/accountmanagement/v1/microdeposits/58273d46-5702-4a1e-b5c6-3d21b5413588"
                  }
               ]
            }

## Validate the Microdeposit

Once the applicant merchant has located the microdeposit amount in their bank account and relayed that information back to you, you must validate that amount by sending a POST to the *validate* endpoint.

By validating the microdeposit amount, thereby validating the bank account itself, the status of the merchant account can be updated to PROCESSING, provided it has successfully gone through the required risk and compliance screening

             curl -X POST https://api.netbanx.com/accountmanagement/v1/microdeposits/58273d46-5702-4a1e-b5c6-3d21b5413588/validate\
              -u devcentre322:B-qa2-0-53625f86-302c021476f52bdc9deab7aea876bb28762e62f92fc6712d0214736abf501e9675e55940e83ef77f5c304edc7968 \
              -H 'Content-Type: application/json' \
              -d ' {
               "amount":0.51
               }

**Response**

            {
               "id":"58273d46-5702-4a1e-b5c6-3d21b5413588",
               "status":"VALIDATED",
               "amount":0.51,
               "links":[
                  {
                     "rel":"self",
                     "href":"http://localhost:7001/accountmanagement/v1/microdeposits/58273d46-5702-4a1e-b5c6-3d21b5413588"
                  }
               ]
            }

## Enable Webhooks

Webhooks allow you to be informed automatically when the status of your on-boarding merchant changes. You can create webhooks in the Merchant Back Office.

To create webhooks:

 1. Sign in to the Merchant Back Office.
 2. Go to **Accounts**>**Notifications**.
 3. Enter the URL to which you require callbacks to be sent.
 4. Select the **Account Status Updates** check box.
 5. Click the **Notify for Selected Events** button.

Once this has been configured, you will receive callbacks for any status change of a merchant account that you have on-boarded. 


# Testing Instructions



# ISO Standards

<a name="currencycodes"></a>
## Currency Codes

**Note:**
 * The table below lists the currencies in which transaction requests are processed, but note that they may be settled in a different currency. 
 * Not all currencies are supported by all banks. Contact your account manager for more information about which currencies are supported for your merchant account.

|Currency |Code |
|--- |--- |
|Argentine Peso |ARS |
|Australian Dollar  |AUD |
|Azerbaijanian Manat    |AZN |
|Bahraini Dinar |BHD  |
|Belarusian Ruble   |BYR  |
|Bolivian Boliviano |BOB  |
|Bosnia and Herzegovina Convertible Mark |BAM  |
|Brazilian Real |BRL  |
|Bulgarian Lev  |BGN  |
|Canadian Dollar    |CAD  |
|Chilean Peso   |CLP  |
|China Yuan Renminbi    |CNY  |
|Columbian Peso |COP  |
|Costa Rican Colon  |CRC  |
|Croatian Kuna  |HRK  |
|Czech Koruna   |CZK  |
|Danish Krone   |DKK  |
|Dominican Peso |DOP  |
|East Caribbean Dollar  |XCD  |
|Egyptian Pound |EGP  |
|Ethiopian Birr |ETB  |
|Euro   |EUR  |
|Fiji Dollar    |FJD  |
|Georgian Lari  |GEL  |
|Guatemala Quetzal  |GTQ  |
|Haiti Goude    |HTG  |
|Honduran Lempira   |HNL  |
|Hong Kong Dollar   |HKD  |
|Hungarian Forint   |HUF  |
|Iceland Krona  |ISK  |
|Indian Rupee   |INR  |
|Indonesia Rupiah   |IDR  |
|Iranian Rial   |IRR  |
|Jamaican Dollar    |JMD  |
|Japanese Yen   |JPY  |
|Jordanian Dinar    |JOD  |
|Kazakhstan Tenge   |KZT  |
|Kenyan Shilling    |KES  |
|Korean Won |KRW  |
|Kuwaiti Dinar  |KWD  |
|Latvian Lats   |LVL  |
|Lebanese Pound |LBP  |
|Libyan Dinars  |LYD  |
|Lithuanian Litas   |LTL  |
|Malawi Kwacha  |MWK  |
|Malaysian Ringgit  |MYR  |
|Mauritius Rupee    |MUR  |
|Mexican Peso   |MXN  |
|Moldovan Leu   |MDL  |
|Moroccan Dirham    |MAD  |
|New Israeli Shekel |ILS  |
|New Zealand Dollar |NZD  |
|Nigerian Naira |NGN  |
|Norwegian Krone    |NOK  |
|Omani Rial |OMR  |
|Pakistan Rupee |PKR  |
|Panamanian Balboa  |PAB  |
|Paraguayan Guarani |PYG  |
|Peruvian Sol   |PEN  |
|Philippine Peso    |PHP  |
|Polish Zloty   |PLN  |
|Pound Sterling |GBP  |
|Qatari Rial    |QAR  |
|Romanian New Leu   |RON  |
|Russian Ruble  |RUB  |
|Saudi Arabian Riyal    |SAR  |
|Serbian Dinar  |RSD  |
|Singapore Dollar   |SGD  |
|South African Rand |ZAR  |
|Sri Lanka Rupee    |LKR  |
|Swedish Krona  |SEK  |
|Swiss Franc    |CHF  |
|Syrian Pound   |SYP  |
|Taiwan New Dollar  |TWD  |
|Thai Baht  |THB  |
|Trinidad and Tobago Dollar |TTD  |
|Tunisian Dinar |TND  |
|Turkish Lira   |TRY  |
|Ukranian Hryunia   |UAH  |
|UAE Dirham |AED  |
|Uruguay Peso   |UYU  |
|US Dollar  |USD  |
|Venezuelan Bolivar |VEF  |
|Viet Nam Dong  |VND  |

<a name="provincecodes"></a>
## Province Codes

|Province               |Code   |
|---                    |---    |
|Alberta                |AB     |
|British Columbia       |BC     |
|Manitoba               |MB     |
|New Brunswick          |NB     |
|Newfoundland           |NL     |
|Nova Scotia            |NS     |
|Northwest Territories  |NT     |
|Nunavut                |NU     |
|Ontario                |ON     |
|Prince Edward Island   |PE     |
|Quebec                 |QC     |
|Saskatchewan           |SK     |
|Yukon                  |YT     |

<a name="statecodes"></a>
## State Codes

|State                  |Code   |
|---                    |---    |
|Alabama                |AL     |
|Alaska                 |AK     |
|American Samoa         |AS     |
|Arizona                |AZ     |
|Arkansas               |AR     |
|Armed Forces Americas  |AA     |
|Armed Forces Europe    |AE     |
|Armed Forces Pacific   |AP     |
|California             |CA     |
|Colorado               |CO     |
|Connecticut            |CT     |
|Delaware               |DE     |
|District of Columbia   |DC     |
|Florida                |FL     |
|Georgia                |GA     |
|Guam                   |GU     |
|Hawaii                 |HI     |
|Idaho                  |ID     |
|Illinois               |IL     |
|Indiana                |IN     |
|International          |IT     |
|Iowa                   |IA     |
|Kansas                 |KS     |
|Kentucky               |KY     |
|Louisiana              |LA     |
|Maine                  |ME     |
|Maryland               |MD     |
|Massachusetts          |MA     |
|Michigan               |MI     |
|Minnesota              |MN     |
|Mississippi            |MS     |
|Missouri               |MO     |
|Montana                |MT     |
|Nebraska               |NE     |
|Nevada                 |NV     |
|New Hampshire          |NH     |
|New Jersey             |NJ     |
|New Mexico             |NM     |
|New York               |NY     |
|North Carolina         |NC     |
|North Dakota           |ND     |
|Northern Mariana Is.   |MP     |
|Ohio                   |OH     |
|Oklahoma               |OK     |
|Oregon                 |OR     |
|Palau                  |PW     |
|Pennsylvania           |PA     |
|Puerto Rico            |PR     |
|Rhode Island           |RI     |
|South Carolina         |SC     |
|South Dakota           |SD     |
|Tennessee              |TN     |
|Texas                  |TX     |
|U.S. Virgin Islands    |VI     |
|United States Federal  |US     |
|Utah                   |UT     |
|Vermont                |VT     |
|Virginia               |VA     |
|Washington             |WA     |
|West Virginia          |WV     |
|Wisconsin              |WI     |
|Wyoming                |WY     |


<a name="countrycodes"></a>
## Country Codes
| **Country**                       | **Code** |
|---                                |---       |
| Afghanistan                       | AF |
| Åland Islands                     | AX |
| Albania                           | AL |
| Algeria                           | DZ |
| American Samoa                    | AS |
| Andorra                           | AD |
| Angola                            | AO |
| Anguilla                          | AI |
| Antarctica                        | AQ |
| Antigua and Barbuda               | AG |
| Argentina                         | AR |
| Armenia                           | AM |
| Aruba                             | AW |
| Australia                         | AU |
| Austria                           | AT |
| Azerbaijan                        | AZ |
| Bahamas                           | BS |
| Bahrain                           | BH |
| Bangladesh                        | BD |
| Barbados                          | BB |
| Belarus                           | BY |
| Belgium                           | BE |
| Belize                            | BZ |
| Benin                             | BJ |
| Bermuda                           | BM |
| Bhutan                            | BT |
| Bolivia                           | BO |
| Bonaire, Sint Eustatius and Saba  | BQ |
| Bosnia and Herzegovina            | BA |
| Botswana                          | BW |
| Bouvet Island                     | BV |
| Brazil                            | BR |
| British Indian Ocean Territory    | IO |
| Brunei Darussalam                 | BN |
| Bulgaria                          | BG |
| Burkina Faso                      | BF |
| Burundi                           | BI |
| Cambodia                          | KH |
| Cameroon                          | CM |
| Canada                            | CA |
| Cape Verde                        | CV |
| Cayman Islands                    | KY |
| Central African Republic          | CF |
| Chad                              | TD |
| Chile                             | CL |
| China                             | CN |
| Christmas Island                  | CX |
| Cocos (Keeling) Islands           | CC |
| Colombia                          | CO |
| Comoros                           | KM |
| Congo                             | CG |
| Congo, Democratic Republic of     | CD |
| Cook Islands                      | CK |
| Costa Rica                        | CR |
| Côte D’Ivoire                     | CI |
| Croatia                           | HR |
| Cuba                              | CU |
| Curaçao                           | CW |
| Cyprus                            | CY |
| Czech Republic                    | CZ |
| Denmark                           | DK |
| Djibouti                          | DJ |
| Dominica                          | DM |
| Dominican Republic                | DO |
| Ecuador                           | EC |
| Egypt                             | EG |
| El Salvador                       | SV |
| Equatorial Guinea                 | GQ |
| Eritrea                           | ER |
| Estonia                           | EE |
| Ethiopia                          | ET |
| Falkland Islands                  | FK |
| Faroe Islands                     | FO |
| Fiji                              | FJ |
| Finland                           | FI |
| France                            | FR |
| French Guiana                     | GF |
| French Polynesia                  | PF |
| French Southern Territories       | TF |
| Gabon                             | GA |
| Gambia                            | GM |
| Georgia                           | GE |
| Germany                           | DE |
| Ghana                             | GH |
| Gibraltar                         | GI |
| Greece                            | GR |
| Greenland                         | GL |
| Grenada                           | GD |
| Guadeloupe                        | GP |
| Guam                              | GU |
| Guatemala                         | GT |
| Guernsey                          | GG |
| Guinea                            | GN |
| Guinea-Bissau                     | GW |
| Guyana                            | GY |
| Haiti                             | HT |
| Heard and McDonald Islands        | HM |
| Honduras                          | HN |
| Hong Kong                         | HK |
| Hungary                           | HU |
| Iceland                           | IS |
| India                             | IN |
| Indonesia                         | ID |
| Iran  (Islamic Republic of)       | IR |
| Iraq                              | IQ |
| Ireland                           | IE |
| Isle of Man                       | IM |
| Israel                            | IL |
| Italy                             | IT |
| Jamaica                           | JM |
| Japan                             | JP |
| Jersey                            | JE |
| Jordan                            | JO |
| Kazakhstan                        | KZ |
| Kenya                             | KE |
| Kiribati                          | KI |
| Korea, Democratic People’s Republic | KP |
| Korea, Republic of                | KR |
| Kuwait                            | KW |
| Kyrgyzstan                        | KG |
| Lao People’s Democratic Republic  | LA |
| Latvia                            | LV |
| Lebanon                           | LB |
| Lesotho                           | LS |
| Liberia                           | LR |
| Libyan Arab Jamahiriya            | LY |
| Liechtenstein                     | LI |
| Lithuania                         | LT |
| Luxembourg                        | LU |
| Macau                             | MO |
| Macedonia                         | MK |
| Madagascar                        | MG |
| Malawi                            | MW |
| Malaysia                          | MY |
| Maldives                          | MV |
| Mali                              | ML |
| Malta                             | MT |
| Marshall Islands                  | MH |
| Martinique                        | MQ |
| Mauritania                        | MR |
| Mauritius                         | MU |
| Mayotte                           | YT |
| Mexico                            | MX |
| Micronesia, Federated States of   | FM |
| Moldova, Republic of              | MD |
| Monaco                            | MC |
| Mongolia                          | MN |
| Montenegro                        | ME |
| Montserrat                        | MS |
| Morocco                           | MA |
| Mozambique                        | MZ |
| Myanmar                           | MM |
| Namibia                           | NA |
| Nauru                             | NR |
| Nepal                             | NP |
| New Caledonia                     | NC |
| New Zealand                       | NZ |
| Nicaragua                         | NI |
| Niger                             | NE |
| Nigeria                           | NG |
| Niue                              | NU |
| Norfolk Island                    | NF |
| Northern Mariana Islands          | MP |
| Norway                            | NO |
| Oman                              | OM |
| Pakistan                          | PK |
| Palau                             | PW |
| Palestinian Territory, Occupied   | PS |
| Panama                            | PA |
| Papua New Guinea                  | PG |
| Paraguay                          | PY |
| Peru                              | PE |
| Philippines                       | PH |
| Pitcairn                          | PN |
| Poland                            | PL |
| Portugal                          | PT |
| Puerto Rico                       | PR |
| Qatar                             | QA |
| Reunion                           | RE |
| Romania                           | RO |
| Russian Federation                | RU |
| Rwanda                            | RW |
| Saint Barthélemy                  | BL |
| Saint Helena                      | SH |
| Saint Kitts and Nevis             | KN |
| Saint Lucia                       | LC |
| Saint Martin                      | MF |
| Saint Vincent and the Grenadines  | VC |
| Samoa                             | WS |
| San Marino                        | SM |
| Sao Tome and Principe             | ST |
| Saudi Arabia                      | SA |
| Senegal                           | SN |
| Serbia                            | RS |
| Seychelles                        | SC |
| Sierra Leone                      | SL |
| Singapore                         | SG |
| Sint Maarten                      | SX |
| Slovakia (Slovak Republic)        | SK |
| Slovenia                          | SI |
| Solomon Islands                   | SB |
| Somalia                           | SO |
| South Africa                      | ZA |
| South Georgia and the South Sandwich Islands | GS |
| South Sudan                       | SS |
| Spain                             | ES |
| Sri Lanka                         | LK |
| St. Pierre and Miquelon           | PM |
| Sudan                             | SD |
| Suriname                          | SR |
| Svalbard and Jan Mayen Islands    | SJ |
| Swaziland                         | SZ |
| Sweden                            | SE |
| Switzerland                       | CH |
| Syrian Arab Republic              | SY |
| Taiwan                            | TW |
| Tajikistan                        | TJ |
| Tanzania, United Republic of      | TZ |
| Thailand                          | TH |
| The Netherlands                   | NL |
| Timor-Leste                       | TL |
| Togo                              | TG |
| Tokelau                           | TK |
| Tonga                             | TO |
| Trinidad and Tobago               | TT |
| Tunisia                           | TN |
| Turkey                            | TR |
| Turkmenistan                      | TM |
| Turks and Caicos Islands          | TC |
| Tuvalu                            | TV |
| Uganda                            | UG |
| Ukraine                           | UA |
| United Arab Emirates              | AE |
| United Kingdom                    | GB |
| United States                     | US |
| United States Minor Outlying Islands | UM |
| Uruguay                           | UY |
| Uzbekistan                        | UZ |
| Vanuatu                           | VU |
| Vatican City State (Holy See)     | VA |
| Venezuela                         | VE |
| Vietnam                           | VN |
| Virgin Islands (British)          | VG |
| Virgin Islands (U.S.)             | VI |
| Wallis and Futuna Islands         | WF |
| Western Sahara                    | EH |
| Yemen                             | YE |
| Zambia                            | ZM |
| Zimbabwe                          | ZW |

# Complex JSON Objects

<a name="merchantaccountobject"></a>
## account
|Element        |Type                       |Description                        |
|---            |---                        |---       |
|id             |string<br/>`length<=36`    |This is the ID returned in the response. It can be used later to look up or update a merchant.|
|name           |string<br/>`length<=250`   |This is the merchant name.|
|legalEntity    |string<br/>`length<=240`   |This is the business legal/trading name (e.g., "ACME CA").|
|status         |enum                       |This is the status of the merchant account. **Note:** This value defaults to *true*. Possible values are: <ul><li></li></ul>|
|currency       |enum                       |This is the currency used for transactions on this merchant account. See [Supported Currency Codes](#supportedcurrencycodes). |
|region         |enum                       |This is the region for the merchant account. Possible values are: <ul><li>US</li><li>CA</li><li>EU</li></ul> |
|locale         |string<br/>`length=5`      |This is the locale value used for the merchant account. The values depend on the region.Possible values are: <ul><li></li></ul> |
|productCode    |string<br/>`length<=50`    |This is the code of the partner product.|
|category       |enum                       |This is the category code of the business. Please see [Merchant Category Codes](#merchantcategorycodes). |
|averageTransactionAmount   |number<br>`max=99999999999`    |This is the average transaction amount, in minor units. |
|url            |string<br/>`length<=60`    |This is the website of the business. |
|phone          |string<br/>`length<=40`     |This is the customer support phone number of the business. |
|email          |string<br/>`length<=240`   |This is the customer support email of the business. |
|yearlyVolumeRange  |enum                   |This is the estimated yearly volume of the business, by transaction. Possible values are: <ul><li>LOW &ndash; 0–50k</li><li>MEDIUM &ndash; 50k–100k</li><li>HIGH &ndash; 100k–250k</li><li>VERY_HIGH &ndash; 250k+</li></ul> |
|userName       |string<br/>`min=2 max=64`  |This is the user name that will be configured to access the merchant account in back office. It should belong to the same merchant.|
|merchantDescriptor |[merchantDescriptor](#merchantdescriptorobject)    |This is the merchant transaction descriptor.|
|usAccountDetails   |[usAccountDetails](#usaccountdetails) |These are the merchant account details.|
|caAccountDetails   |[caAccountDetails](#caaccountdetails)  |These are the merchant account details.|
|euAccountDetails   |[euAccountDetails](#euaccountdetails)  |These are the merchant account details. |


```apib
{
  "name":"ACME CAD",
  "legalEntity":"ACME Enterprises",
  "status":"ENABLED",
  "currency":"CAD",
  "region":"CA",
  "locale":"en_CA",
  "productCode":"987",
  "category":"PC",
  "averageTransactionAmount":"50000",
  "url":"www.acmepc.ca",
  "phone":"5556668888",
  "email":"service@acmepc.ca",
  "yearlyVolumeRange":"HIGH",
  "userName":"Jane User"
  }
```

<a name="businessownersobject"></a>
## businessowners

|Element                        |Type           |Description                        |
|---                            |---            |---       |
|id             |string<br/>`length<=36`        |This is the ID returned in the response. It can be used later to look up or update a merchant.| 
|firstName      |string<br/>`length<=50`        |This is the first name of the business owner.|
|middleName     |string<br/>`length<=50`        |This is the middle name of the business owner.|
|lastName      |string<br/>`length<=50`         |This is the last name of the business owner.|
|previousLastName      |string<br/>`length<=50` |This is the previous last name of the business owner.|
|email          |string<br/>`length<=255`       |This is the email address of the business owner.|
|jobTitle       |string<br/>`length<=50`        |This is the job title of the business owner. |
|phone          |string<br/>`length<=40`        |This is the phone number of the business owner.|
|nationality    |enum                           |This is the nationality code of the business owner. See [Nationality Codes](#nationalitycodes).|
|dateOfBirth    |[dateOfBirth](#date)           |This is the birth date of the business owner.|
|ssn            |string<br/>`length<=9`         |This is the SSN/SIN of the business owner. |
|gender         |enum                           |This is the gender of the business owner. Possible values are: <ul><li>M &ndash; male</li><li>F &ndash; female</li></ul> |
|percentageOwnership    |number<br/>`max=100`   |This is the percentage of ownership by the business owner.|



<a name="caaccountdetailsobject"></a>
## caAccountDetails
|Element                        |Type                       |Description                        |
|---                            |---                        |---       |
|type                           |enum                       |This is the type code of the business. See [Business Type Codes](#businesstypecodes).|
|description                    |string<br/>`length<=50`    |This is a description of the business.|
|isCardPresent                  |boolean                    |This indicates whether the customers' cards will be physically present when processing payments.|
|hasPreviouslyProcessedCards    |boolean                    |This indicates whether the business has previously accepted credit cards.|
|shipsGoods                     |boolean                    |This indicates whether the business will physically deliver goods.|
|deliveryTimeRange              |enum                       |This is the time range for the business's order fulfillment. Possible values are:<ul><li>SHORT (1–7 days)</li><li>MEDIUM (8–14 days)</li><li>LONG (15 days and more)</li></ul>|
|refundPolicy                   |boolean                    |This indicates whether the business has a refund policy.|
|refundPolicyDescription        |string<br/>`length<=30`    |This is a description of the business's refund policy.|
|federalTaxNumber               |string<br/>`length=9`      |This is the tax identification/registration number of the business.|

```apib
{
  "type":"LTD",
  "description":"Online Company",
  "isCardPresent":true,
  "hasPreviouslyProcessedCards":true,
  "shipsGoods":false,
  "refundPolicy":true,
  "refundPolicyDescription":"Full refund available",
  "federalTaxNumber":"123654789"
}
```

<a name="dateobject"></a>
## date
|Element    |Type                       |Description                        |
|---        |---                        |---       |
|day        |string<br/>`length=2 max=31`     |This is the day of the month.|
|month      |string<br/>`length=2 max = 12`     |This is the month of the year.|
|year       |string<br/>`length=4`      |This is the year.|

```apib
{
  "day":"24",
  "month":"10",
  "year":"1981"
}
```


<a name="euaccountdetailsobject"></a>
## euAccountDetails

|Element                        |Type                       |Description                        |
|---                            |---                        |---       |
|type                           |enum                       |This is the type code of the business. See [Business Type Codes](#businesstypecodes).|
|description                    |string<br/>`length<=50`    |This is a description of the business.|
|isCardPresent                  |boolean                    |This indicates whether the customers' cards will be physically present when processing payments.|
|hasPreviouslyProcessedCards    |boolean                    |This indicates whether the business has previously accepted credit cards.|
|shipsGoods                     |boolean                    |This indicates whether the business will physically deliver goods.|
|deliveryTimeRange              |enum                       |This is the time range for the business's order fulfillment. Possible values are:<ul><li>SHORT (1–7 days)</li><li>MEDIUM (8–14 days)</li><li>LONG (15 days and more)</li></ul>**Note:** This value is required when *shipsGoods* is set to *true*.|
|refundPolicy                   |boolean                    |This indicates whether the business has a refund policy.|
|refundPolicyDescription        |string<br/>`length<=30`    |This is a description of the business's refund policy. **Note:** This value is required when *refundPolicy* is set to *true*.|
|taxIdentificationNumber        |string<br/>`length<=30`    |This is the tax identification (VAT) number of the business.|
|registrationNumber             |string<br/>`length<=20`    |This is the registration number of the business.|
|additionalPaymentMethods       |array                      |These are optional payment types for the business. **Note:** This value is used for EU businesses only. Possible values are: <ul><li>SEPA</li><li>IDEAL</li><li>GIROPAY</li><li>SOFORT</li><li>UK_DIRECT_DEBIT</li></ul>|

```apib
{
  "type":"CORP",
  "description":"Online Company",
  "isCardPresent":true,
  "hasPreviouslyProcessedCards":true,
  "shipsGoods":false,
  "refundPolicy":true,
  "refundPolicyDescription":"Full refund available",
  "taxIdentificationNumber":"123654789",
  "registrationNumber":"BB765432",
  "additionalPaymentMethods":[
    "SEPA"
    ]
}
```

<a name="merchantobject"></a>
## merchants
|Element    |Type                       |Description                        |
|---        |---                        |---       |
|id        |string<br/>`length<=36`     |This is the ID returned in the response. It can be used later to look up or update a merchant.|
|name      |string<br/>`length<=240`    |This is the merchant name.|

```apib
{
  "id":"a02e52c7-c991-4418-966a-b62989cb0eae",
  "name":"ACME"
  }
```

<a name="merchantdescriptorobject"></a>
## merchantDescriptor
|Element                        |Type                       |Description                        |
|---                            |---                        |---       |
|dynamicDescriptor              |string<br/>`length<=20`    |This is the dynamic descriptor field.|
|phone                          |string<br/>`length=13`     |This is the phone number to use in the card descriptor.|

```apib
{
  "dynamicDescriptor":"Acme Corp.",
  "phone":"555-666-9999"
}
```


<a name="usaccountdetailsobject"></a>
## usAccountDetails

|Element                        |Type                       |Description                        |
|---                            |---                        |---       |
|type                           |enum                       |This is the type code of the business. See [Business Type Codes](#businesstypecodes).|
|description                    |string<br/>`length<=50`    |This is a description of the business.|
|isCardPresent                  |boolean                    |This indicates whether the customers' cards will be physically present when processing payments.|
|hasPreviouslyProcessedCards    |boolean                    |This indicates whether the business has previously accepted credit cards.|
|shipsGoods                     |boolean                    |This indicates whether the business will physically deliver goods.|
|deliveryTimeRange              |enum                       |This is the time range for the business's order fulfillment. Possible values are:<ul><li>SHORT (1–7 days)</li><li>MEDIUM (8–14 days)</li><li>LONG (15 days and more)</li></ul>**Note:** This value is required when *shipsGoods* is set to *true*.|
|refundPolicy                   |boolean                    |This indicates whether the business has a refund policy.|
|refundPolicyDescription        |string<br/>`length<=30`    |This is a description of the business's refund policy. **Note:** This value is required when *refundPolicy* is set to *true*.|
|federalTaxNumber               |string<br/>`length=9`      |This is the tax identification/registration number of the business.|

```apib
{
  "type":"CORP",
  "description":"Online Company",
  "isCardPresent":true,
  "hasPreviouslyProcessedCards":true,
  "shipsGoods":false,
  "refundPolicy":true,
  "refundPolicyDescription":"Full refund available",
  "federalTaxNumber":"123654789"
}
```


# Appendices

## BACS Countries List
<a name="bacscountries"></a>

|Country    |Code   |
|---        |---    |
|United Kingdom |GB |

## Business Type Codes
<a name="businesstypecodes"></a>

|Code           |Description   |
|---            |---        |
|CHARITY        |Charity |
|CIC            |Community Interest Company |
|CORP           |Corporation |
|LTD            |Limited    |
|LLC            |Limited Liability Company |
|LLP            |Limited Liability Partnership |
|NPCORP         |Non-Profit |
|PARTNERSHP     |Partnership |
|PLC            |Public Limited Company |
|GOV            |Public Sector/Governmental |
|SOLEPROP       |Sole Proprietorship/Sole Trader |
|TRUST          |Trust |

## Merchant Category Codes
<a name="merchantcategorycodes"></a>

### Canada and U.S.

| Code              | Description                    |
|---                |---                            |
| ACCT             | Accounting                     |
| ART              | Artist Supply and Craft Stores |
| BEAUTY           | Barber & Beauty Shop           |
| CATERING         | Catering                       |
| CHARITY          | Charity                        |
| CLEANING         | Cleaning Services              |
| CONSULTANT       | Consultant                     |
| CONTRACTOR       | Trade Contractor               |
| DENTIST          | Dentistry                      |
| EDU              | Schools & Education            |
| FOOD             | Food/Grocery                   |
| LANDSCAPING      | Landscaping                    |
| LEGAL            | Legal Services                 |
| MEDICAL_PRACT    | Medical Practitioner           |
| MEDICAL_SERV     | Health Services                |
| MEMBERSHIP       | Membership Org.                |
| MISC_FOOD_STORES | Misc. Food Stores              |
| MISC_MERCH       | Misc General Merchandise       |
| MISC_SERV        | Services                       |
| MUSIC            | Music/Entertainment            |
| PC               | Computer Services              |
| PHOTO_FILM       | Photo/FILM                     |
| PROF_SERV        | Professional Services          |
| REAL_ESTATE      | Real Estate                    |
| RECREATION       | Recreation Services            |
| REPAIR           | Repair Services                |
| RESTO            | Restaurant/Bar                 |
| RETAIL           | Direct Marketing Retail (MOTO) |
| TAXI             | Taxi/Limo                      |
| VET              | Veterinary                     |
| WEB_DEV          | Web Design                     |
| WEB_HOSTING      | Web Hosting                    |


### EU

| Code                | Description                                     |
|---                    |---                                            |
| ACCT                | Accounting                                      |
| ADV                 | Advertising Services                            |
| ART                 | Artist Supply and Craft Stores                  |
| BEAUTY              | Barber & Beauty Shop                            |
| BUS_SERV            | Business Services                               |
| CATERING            | Catering                                        |
| CHARITY             | Charity                                         |
| CLEANING            | Cleaning Services                               |
| CLUBS               | Clubs, Membership                               |
| COMPUTERS           | Computers                                       |
| CONSULTANT          | Consultant                                      |
| CONTRACTOR          | Trade Contractor                                |
| COUNSELLING         | Counselling                                     |
| DANCE_SCHOOL_STUDIO | Dance Hall, School, Studio                      |
| DENTIST             | Dentistry                                       |
| DOCTOR              | Doctor                                          |
| EDU                 | Schools & Education                             |
| ELECTRO             | Electronic Stores                               |
| FLORIST             | Florists                                        |
| FOOD                | Food/Grocery                                    |
| HEALTH_BEAUTY       | Health & Beauty Spa                             |
| INS_SALES           | Insurance Sales, Underwriting, & Premiums       |
| LANDSCAPING         | Landscaping                                     |
| LEGAL               | Legal Services                                  |
| MEDICAL_PRACT       | Medical Practitioner                            |
| MEDICAL_SERV        | Health Services                                 |
| MEMBERSHIP          | Membership Org.                                 |
| MEN_WOMEN_CLOTHING  | Men's & Women's Clothing Stores                 |
| MISC_APP            | Miscellaneous Apparel & Accessory Shops         |
| MISC_FOOD_STORES    | Misc. Food Stores                               |
| MISC_HOME           | Miscellaneous Home Furnishing Speciality Stores |
| MISC_MERCH          | Misc General Merchandise                        |
| MISC_SERV           | Services                                        |
| PC                  | Computer Services                               |
| PHOTO_FILM          | Photo/FILM                                      |
| PROF_SERV           | Professional Services                           |
| RAZOR_STORE         | Electric Razor Store                            |
| REAL_ESTATE         | Real Estate                                     |
| RECREATION          | Recreation Services                             |
| RECRE_SPORT_CAMPS   | Recreation & Sporting Camps                     |
| REPAIR              | Repair Services                                 |
| RESTO               | Restaurant/Bar                                  |
| RETAIL              | Direct Marketing Retail (MOTO)                  |
| SHOE_STORE          | Shoe Stores                                     |
| SPORTS              | Sports                                          |
| SPORT_GOODS_STORE   | Sporting Goods Store                            |
| TAXI                | Taxi/Limo                                       |
| THEATRE             | Theatre                                         |
| VET                 | Veterinary                                      |
| WEB_DEV             | Web Design                                      |


## Nationality Codes
<a name="nationalitycodes"></a>

|  Code |  Description  |
|---    |---            |
| AF    | Afghani                                      |
| AL    | Albanian                                     |
| DZ    | Algerian                                     |
| US    | American                                     |
| AS    | American Samoan                              |
| AD    | Andorran                                     |
| AO    | Angolan                                      |
| AI    | Anguillan                                    |
| AQ    | Antarctic                                    |
| AG    | Antiguan                                     |
| AR    | Argentine                                    |
| AM    | Armenian                                     |
| AW    | Arubian                                      |
| AU    | Australian                                   |
| AT    | Austrian                                     |
| AZ    | Azerbaijani                                  |
| BS    | Bahameese                                    |
| BH    | Bahrainian                                   |
| BD    | Bangladeshi                                  |
| BB    | Barbadian                                    |
| BL    | Barthélemois                                 |
| BY    | Belarusian                                   |
| BE    | Belgian                                      |
| BZ    | Belizean                                     |
| BJ    | Beninese                                     |
| BM    | Bermudan                                     |
| BT    | Bhutanese                                    |
| BO    | Bolivian                                     |
| BA    | Bosnian                                      |
| BR    | Brazilian                                    |
| GB    | British                                      |
| BN    | Bruneian                                     |
| BG    | Bulgarian                                    |
| BF    | Burkinabe                                    |
| BI    | Burundian                                    |
| KH    | Cambodian                                    |
| CM    | Cameroonian                                  |
| CA    | Canadian                                     |
| CV    | Cape Verdean                                 |
| KY    | Caymanian                                    |
| CF    | Central African                              |
| TD    | Chadian                                      |
| CL    | Chilean                                      |
| CN    | Chinese                                      |
| CX    | Christmas Islander                           |
| CC    | Cocossian                                    |
| CO    | Colombian                                    |
| KM    | Comoran                                      |
| CG    | Congolese                                    |
| CD    | Congolese (Democratic Republic of the Congo) |
| CK    | Cook Islander                                |
| CR    | Costa Rican                                  |
| HR    | Croatian                                     |
| CU    | Cuban                                        |
| CW    | Curaçaoan                                    |
| CY    | Cypriot                                      |
| CZ    | Czech                                        |
| DK    | Danish                                       |
| DJ    | Djiboutian                                   |
| DM    | Dominican (Commonwealth)                     |
| DO    | Dominican (Republic)                         |
| NL    | Dutch                                        |
| EC    | Ecuadorean                                   |
| EG    | Egyptian                                     |
| AE    | Emirian                                      |
| GQ    | Equatorial Guinean                           |
| ER    | Eritrean                                     |
| EE    | Estonian                                     |
| ET    | Ethiopian                                    |
| FK    | Falkland Islander                            |
| FO    | Faroese                                      |
| FJ    | Fijian                                       |
| PH    | Filipino                                     |
| FI    | Finnish                                      |
| FR    | French                                       |
| GF    | French Guianese                              |
| PF    | French Polynesian                            |
| GA    | Gabonese                                     |
| GM    | Gambian                                      |
| GE    | Georgian                                     |
| DE    | German                                       |
| GH    | Ghanaian                                     |
| GI    | Gibralterian                                 |
| GR    | Greek                                        |
| GL    | Greenlander                                  |
| GD    | Grenadian                                    |
| GP    | Guadeloupean                                 |
| GU    | Guamanian                                    |
| GT    | Guatemalan                                   |
| GW    | Guinea-Bissau nationals                      |
| GN    | Guinean                                      |
| GY    | Guyanese                                     |
| HT    | Haitian                                      |
| HN    | Honduran                                     |
| HK    | Hong Konger                                  |
| HU    | Hungarian                                    |
| KI    | I-Kiribati                                   |
| IS    | Icelander                                    |
| IN    | Indian                                       |
| ID    | Indonesian                                   |
| IR    | Iranian                                      |
| IQ    | Iraqi                                        |
| IE    | Irish                                        |
| IL    | Israeli                                      |
| IT    | Italian                                      |
| CI    | Ivorian                                      |
| JM    | Jamaican                                     |
| JP    | Japanese                                     |
| JO    | Jordanian                                    |
| KZ    | Kazakhstani                                  |
| KE    | Kenyan                                       |
| KN    | Kittian                                      |
| KW    | Kuwaiti                                      |
| KG    | Kyrgyzstani                                  |
| LA    | Laotian                                      |
| LV    | Latvian                                      |
| LB    | Lebanese                                     |
| LR    | Liberian                                     |
| LY    | Libyan                                       |
| LI    | Liechtensteiner                              |
| LT    | Lithunian                                    |
| LU    | Luxembourger                                 |
| MO    | Macanese                                     |
| MK    | Macedonian                                   |
| YT    | Mahoran                                      |
| MG    | Malagasy                                     |
| MW    | Malawian                                     |
| MY    | Malaysian                                    |
| MV    | Maldivan                                     |
| ML    | Malian                                       |
| MT    | Maltese                                      |
| IM    | Manx                                         |
| MH    | Marshallese                                  |
| MQ    | Martinican                                   |
| MR    | Mauritanian                                  |
| MU    | Mauritian                                    |
| MX    | Mexican                                      |
| FM    | Micronesian                                  |
| MD    | Moldovan                                     |
| MC    | Monacan                                      |
| MN    | Mongolian                                    |
| ME    | Montenegrin                                  |
| MS    | Montserratian                                |
| MA    | Moroccan                                     |
| LS    | Mosotho                                      |
| BW    | Motswana                                     |
| MZ    | Mozambican                                   |
| MM    | Myanmarese                                   |
| NA    | Namibian                                     |
| NR    | Nauruan                                      |
| NP    | Nepalese                                     |
| NC    | New Caledonian                               |
| NZ    | New Zealander                                |
| VU    | Ni-Vanuatu                                   |
| NI    | Nicaraguan                                   |
| NG    | Nigerian                                     |
| NE    | Nigerien                                     |
| NU    | Niuean                                       |
| NF    | Norfolk Islander                             |
| KP    | North Korean                                 |
| MP    | Northern Mariana Islander                    |
| NO    | Norwegian                                    |
| OM    | Omani                                        |
| PK    | Pakistani                                    |
| PW    | Palauan                                      |
| PS    | Palestinian                                  |
| PA    | Panamanian                                   |
| PG    | Papua New Guinean                            |
| PY    | Paraguayan                                   |
| PE    | Peruvian                                     |
| PN    | Pitcairn Islander                            |
| PL    | Polish                                       |
| PT    | Portuguese                                   |
| PR    | Puerto Rican                                 |
| QA    | Qatari                                       |
| RO    | Romanian                                     |
| RU    | Russian                                      |
| RW    | Rwandan                                      |
| SH    | Saint Helenian                               |
| LC    | Saint Lucian                                 |
| VC    | Saint Vincentian                             |
| PM    | Saint-Pierrais                               |
| SV    | Salvadorean                                  |
| WS    | Samoan                                       |
| SM    | Sanmarinese                                  |
| SA    | Saudi Arabian                                |
| SN    | Senegalese                                   |
| RS    | Serbian                                      |
| SC    | Seychellois                                  |
| SL    | Sierra Leonean                               |
| SG    | Singaporean                                  |
| SK    | Slovakian                                    |
| SI    | Slovenian                                    |
| SB    | Solomon Islander                             |
| SO    | Somali                                       |
| ZA    | South African                                |
| KR    | South Korean                                 |
| ES    | Spanish                                      |
| LK    | Sri Lankan                                   |
| SD    | Sudanese                                     |
| SS    | Sudanese (South Sudan)                       |
| SR    | Surinamer                                    |
| SZ    | Swazi                                        |
| SE    | Swedish                                      |
| CH    | Swiss                                        |
| SY    | Syrian                                       |
| ST    | São Tomean                                   |
| TW    | Taiwanese                                    |
| TJ    | Tajikistani                                  |
| TZ    | Tanzanian                                    |
| TH    | Thai                                         |
| TL    | Timorese                                     |
| TG    | Togolese                                     |
| TK    | Tokelauan                                    |
| TO    | Tongan                                       |
| TT    | Trinidadian                                  |
| TN    | Tunisian                                     |
| TR    | Turkish                                      |
| TM    | Turkmen                                      |
| TC    | Turks and Caicos Islander                    |
| TV    | Tuvaluan                                     |
| UG    | Ugandan                                      |
| UA    | Ukrainian                                    |
| UY    | Uruguayan                                    |
| UZ    | Uzbekistani                                  |
| VE    | Venezuelan                                   |
| VN    | Vietnamese                                   |
| VG    | Virgin Islander (British Virgin Islands)     |
| WF    | Wallisian                                    |
| EH    | Western Saharan                              |
| YE    | Yemeni                                       |
| ZM    | Zambian                                      |
| ZW    | Zimbabwean                                   |
| AX    | Ålandic                                      |

## Recovery Questions
<a name="recoveryquestions"></a>

|  Question ID | Question Text                                                                       | Answer Patterns       |
|--------------|-------------------------------------------------------------------------------------|-----------------------|
| 1            | What is the name of your oldest sibling?                                            | ^[a-zA-Z ]+           |
| 2            | What is the name of your youngest sibling?                                          | ^[a-zA-Z ]+           |
| 3            | What is the make and model of the first car you owned?                              |                       |
| 4            | What are the last four digits of your bank account number?                          | ^[0-9]{4}$            |
| 5            | What are the last four digits of your bank account number?                          | ^[a-zA-Z ]+           |
| 6            | What is the name of your first pet?                                                 | ^[a-zA-Z ]+           |
| 7            | Who is your mobile provider, and what is your mobile number?                        |                       |
| 8            | What is the sum of your year of birth? (e.g., if YOB=1234, sum=1+2+3+4=10)          | ^[0-9]+               |
| 9            | In what city and year was your business established? (e.g., Manchester 1999)        | ^[a-zA-Z ]+\s[0-9]{4} |
| 10           | What high school did you graduate from, and in what year? (e.g., Central High 1999) | ^[a-zA-Z ]+\s[0-9]{4} |

## SEPA Countries List
<a name="sepacountries"></a>

|Country    |Code   |
|---        |---    |
|Austria    |AT     |
|Belgium    |BE     |
|Bulgaria   |BG     |
|Croatia    |HR     |
|Cyprus     |CY     |
|Czech Republic |CZ |
|Denmark    |DK     |
|Estonia    |EE     |
|Finland    |FI     |
|France     |FR     |
|French Guiana  |GF |
|Germany    |DE     |
|Gibraltar  |GI     |
|Greece     |GR     |
|Guadeloupe |GP     |
|Guernsey   |GG     |
|Hungary    |HU     |
|Iceland    |IS     |
|Ireland    |IE     |
|Isle of Man    |IM |
|Italy      |IT     |
|Jersey     |JE     |
|Latvia     |LV     |
|Liechtenstein  |LI |
|Lithuania  |LT     |
|Luxembourg |LU     |
|Malta      |MT     |
|Martinique |MQ     |
|Mayotte    |YT     |
|Monaco     |MC     |
|Norway     |NO     |
|Poland     |PL     |
|Portugal   |PT     |
|Reunion    |RE     |
|Romania    |RO     |
|Saint Barthélemy   |BL |
|Saint Martin   |MF |
|San Marino |SM |
|Slovakia (Slovak Republic) |SK |
|Slovenia   |SI |
|Spain      |ES |
|St. Pierre and Miquelon    |PM |
|Sweden     |SE     |
|Switzerland    |CH     |
|The Netherlands    |NL |
|United Kingdom |GB |
|Åland Islands  |AX |

## Supported Country Codes by Region
<a name="supportedcountrycodes"></a>

### US

|  Country |  Code  |
|---    |---        |
|United States |US |


### Canada

|  Country |  Code  |
|---    |---        |
|Canada |CA |


### EU

| Country                    | Code |
|---                    |--- |
| Austria                    | AT   |
| Belgium                    | BE   |
| Bulgaria                   | BG   |
| Cyprus                     | CY   |
| Czech Republic             | CZ   |
| Denmark                    | DK   |
| Estonia                    | EE   |
| Finland                    | FI   |
| France                     | FR   |
| Germany                    | DE   |
| Gibraltar                  | GI   |
| Greece                     | GR   |
| Guernsey                   | GG   |
| Hungary                    | HU   |
| Iceland                    | IS   |
| Ireland                    | IE   |
| Isle of Man                | IM   |
| Italy                      | IT   |
| Jersey                     | JE   |
| Latvia                     | LV   |
| Liechtenstein              | LI   |
| Lithuania                  | LT   |
| Luxembourg                 | LU   |
| Malta                      | MT   |
| Monaco                     | MC   |
| Norway                     | NO   |
| Poland                     | PL   |
| Portugal                   | PT   |
| Romania                    | RO   |
| Slovakia (Slovak Republic) | SK   |
| Slovenia                   | SI   |
| Spain                      | ES   |
| Sweden                     | SE   |
| Switzerland                | CH   |
| The Netherlands            | NL   |
| Turkey                     | TR   |
| United Kingdom             | GB   |


## Supported Currency Codes by Region
<a name="supportedcurrencycodes"></a>

### US

|  Currency |  Code  |
|---    |---        |
|US Dollar |USD |


### Canada

|  Currency |  Code  |
|---    |---        |
|Canadian Dollar    |CAD |
|US Dollar |USD |

### EU

| Currency           | Code |
|---                |---    |
| Australian Dollar  | AUD  |
| Canadian Dollar    | CAD  |
| Danish Krone       | DKK  |
| Euro               | EUR  |
| Hong Kong Dollar   | HKD  |
| Japanese Yen       | JPY  |
| New Zealand Dollar | NZD  |
| Norwegian Krone    | NOK  |
| Pound Sterling     | GBP  |
| Rand               | ZAR  |
| Swedish Krona      | SEK  |
| Swiss Franc        | CHF  |
| US Dollar          | USD  |


# Business Owner Previous Addresses [/previousaddresses]
<a name="previousaddresses"></a>